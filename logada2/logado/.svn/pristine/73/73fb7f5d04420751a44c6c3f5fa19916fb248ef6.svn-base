<?php
/**
 * Zend Framework (http://framework.zend.com/)
 *
 * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository
 * @copyright Copyright (c) 2005-2013 Zend Technologies USA Inc. (http://www.zend.com)
 * @license   http://framework.zend.com/license/new-bsd New BSD License
 */

namespace Application\Controller;

use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;
use Application\Entity\Admin;
use Zend\Authentication\AuthenticationService,
    Zend\Authentication\Storage\Session as SessionStorage;

class IndexController extends AbstractActionController
{
    protected $_objectManager;

    public function indexAction()
    {
        $admins = $this->getObjectManager()->getRepository('\Application\Entity\Admin')->findAll();

        return new ViewModel(array('admins' => $admins));
    }

    public function loginAction()
    {
        $error = null;
        $request = $this->getRequest();

        if($request->isPost())
        {
            $data = $request->getPost()->toArray();

            // Criando Storage para gravar sessão da authtenticação
            $sessionStorage = new SessionStorage("Admin");

            $admin = $this->getObjectManager()->getRepository('\Application\Entity\Admin')->findBy(array('login'=>$data['login'],'senha'=>$data['senha']));
            if($admin){
                $admin = $admin[0];
                $sessionStorage->write($admin,null);
                $error = false;
                return $this->redirect()->toRoute('home_admin');
            }
            else
                $error = true;

        }

        return new ViewModel(array('error'=>$error));
    }

    public function addAction()
    {
        if ($this->request->isPost()) {
            $admin = new Admin();
            $admin->setNome($this->getRequest()->getPost('nome'));
            $admin->setLogin($this->getRequest()->getPost('login'));
            $admin->setSenha($this->getRequest()->getPost('senha'));

            $this->getObjectManager()->persist($admin);
            $this->getObjectManager()->flush();
            $newId = $admin->getId();

            return $this->redirect()->toRoute('admin');
            //echo "<script>document.location='http://logada.zarbsolution.com.br/admin/';</script>";
        }
        return new ViewModel();
    }

    public function editAction()
    {
        $id = (int) $this->params()->fromRoute('id', 0);
        $admin = $this->getObjectManager()->find('\Application\Entity\Admin', $id);

        if ($this->request->isPost()) {
            $admin->setNome($this->getRequest()->getPost('nome'));
            $admin->setLogin($this->getRequest()->getPost('login'));
            $admin->setSenha($this->getRequest()->getPost('senha'));

            $this->getObjectManager()->persist($admin);
            $this->getObjectManager()->flush();

            return $this->redirect()->toRoute('admin');
            //echo "<script>document.location='http://logada.zarbsolution.com.br/admin/';</script>";
        }

        return new ViewModel(array('admin' => $admin));
    }

    public function deleteAction()
    {
        $id = (int) $this->params()->fromRoute('id', 0);
        $admin = $this->getObjectManager()->find('\Application\Entity\Admin', $id);

        if ($this->request->isPost()) {
            $this->getObjectManager()->remove($admin);
            $this->getObjectManager()->flush();

            return $this->redirect()->toRoute('admin');
            //echo "<script>document.location='http://logada.zarbsolution.com.br/admin/';</script>";
        }

        return new ViewModel(array('admin' => $admin));
    }

    protected function getObjectManager()
    {
        if (!$this->_objectManager) {
            $this->_objectManager = $this->getServiceLocator()->get('Doctrine\ORM\EntityManager');
        }

        return $this->_objectManager;
    }
}
